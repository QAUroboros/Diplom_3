{"name": "Заказы пользователя отображаются в «Ленте заказов»", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_order.TestOrderFlow object at 0x1049bc280>\nopen_browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"97fddedcf5dd3cec57bcf0d558d63fb6\")>\n\n    @allure.title('Заказы пользователя отображаются в «Ленте заказов»')\n    def test_user_orders_displayed_in_order_feed(self, open_browser):\n        profile_page = ProfilePage(open_browser)\n        feed_page = FeedPage(open_browser)\n        profile_page.open_user_orders()\n>       user_orders = profile_page.get_user_orders()\n\ntests/test_order.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npage/profile_account_page.py:15: in get_user_orders\n    orders = self.find_elements(self.locators.USER_ORDERS)\npage/base_page.py:34: in find_elements\n    return WebDriverWait(self.driver, timeout).until(expected_conditions.presence_of_all_elements_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"97fddedcf5dd3cec57bcf0d558d63fb6\")>\nmethod = <function presence_of_all_elements_located.<locals>._predicate at 0x104b7f790>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nvenv/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException"}, "steps": [{"name": "Переход по URL: 'https://stellarburgers.nomoreparties.site/account/profile'", "status": "passed", "steps": [{"name": "Ожидание видимости элемента: ('xpath', \"//div[contains(@class, 'profile__order')]\")", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', \"//div[contains(@class, 'profile__order')]\")"}, {"name": "timeout", "value": "10"}], "start": 1729776119848, "stop": 1729776130280}], "parameters": [{"name": "url", "value": "'https://stellarburgers.nomoreparties.site/account/profile'"}, {"name": "expected_element", "value": "('xpath', \"//div[contains(@class, 'profile__order')]\")"}], "start": 1729776118672, "stop": 1729776130280}, {"name": "Получение списка элементов: ('xpath', \"//div[contains(@class, 'profile__order')]\")", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"/Users/artemkrivoshein/Diplom/Diplom_3/venv/lib/python3.9/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/Users/artemkrivoshein/Diplom/Diplom_3/page/base_page.py\", line 34, in find_elements\n    return WebDriverWait(self.driver, timeout).until(expected_conditions.presence_of_all_elements_located(locator))\n  File \"/Users/artemkrivoshein/Diplom/Diplom_3/venv/lib/python3.9/site-packages/selenium/webdriver/support/wait.py\", line 105, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "parameters": [{"name": "locator", "value": "('xpath', \"//div[contains(@class, 'profile__order')]\")"}, {"name": "timeout", "value": "10"}], "start": 1729776130280, "stop": 1729776140569}], "attachments": [{"name": "stdout", "source": "9e11c41a-ac80-4eaf-8b6c-ac41f07c31ff-attachment.txt", "type": "text/plain"}], "start": 1729776118672, "stop": 1729776140578, "uuid": "8adbc424-02c2-4853-9994-3e684860e6e1", "historyId": "dbb0062afa7e8f78b99f283cf7435d34", "testCaseId": "dbb0062afa7e8f78b99f283cf7435d34", "fullName": "tests.test_order.TestOrderFlow#test_user_orders_displayed_in_order_feed", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('login')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_order"}, {"name": "subSuite", "value": "TestOrderFlow"}, {"name": "host", "value": "MacBook-Air-Artem.local"}, {"name": "thread", "value": "68649-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order"}]}